// Generated by CoffeeScript 1.10.0
(function() {
  angular.module('widgets').directive('displayValue', function($compile) {
    var Tpl, controller, digital, pointer, render;
    Tpl = {
      svg: '<svg width="{{width}}" height="{{height}}">{{content}}</svg>',
      g: '<g height="100%" n="{{n}}" transform="{{transform}}">{{content}}</g>',
      0: '<path d="M 6.0691563 92.438563 L 11.173126 87.712665 L 42.93116 87.712665 L 46.711878 92.438563 L 41.607908 96.975425 L 9.8498746 96.78639 Z" fill="{{color}}" />',
      1: '<path d="M 54.63138 50.283554 L 58.412097 54.820416 L 54.06427 86.01134 L 48.771266 90.548204 L 44.990548 86.20038 L 49.338374 54.820416 Z" fill="{{color}}" />',
      2: '<path d="M 11.92927 48.393195 L 17.222275 44.045369 L 48.98031 44.045369 L 52.950063 48.393195 L 47.846093 52.930057 L 15.899024 52.930057 Z" fill="{{color}}" />',
      3: '<path d="M 10.2279465 50.283554 L 14.008665 54.820416 L 9.6608387 86.01134 L 4.367833 90.548204 L .58711485 86.20038 L 4.934941 54.820416 Z" fill="{{color}}" />',
      4: '<path d="M 60.794913 6.4277286 L 64.57563 10.9645906 L 60.227806 42.155517 L 54.9348 46.69238 L 51.154082 42.344553 L 55.501908 10.9645906 Z" fill="{{color}}" />',
      5: '<path d="M 18.356491 4.536862 L 23.46046 0 L 55.218494 0 L 58.999212 4.536862 L 53.895243 9.26276 L 22.326245 9.26276 Z" fill="{{color}}" />',
      6: '<path d="M 16.297103 6.4277286 L 20.077821 10.9645906 L 15.729995 42.155517 L 10.4369895 46.69238 L 6.656271 42.344553 L 11.004097 10.9645906 Z" fill="{{color}}" />',
      7: '<path d="M 61.010922 84.975425 L 61.010922 84.975425 C 64.32463 84.975425 67.010922 87.661717 67.010922 90.975425 L 67.010922 90.975425 C 67.010922 94.289134 64.32463 96.975425 61.010922 96.975425 L 61.010922 96.975425 C 57.697214 96.975425 55.010922 94.289134 55.010922 90.975425 L 55.010922 90.975425 C 55.010922 87.661717 57.697214 84.975425 61.010922 84.975425 Z" fill="{{color}}" />'
    };

    /*
      5
    6   4
      2
    3   1
      0 7
     */
    digital = function(chr, onColor, offColor) {
      var c, chars;
      chars = {
        0: 0x7b,
        '0.': 0xfb,
        1: 0x12,
        '1.': 0x92,
        2: 0x3d,
        '2.': 0xbd,
        3: 0x37,
        '3.': 0xb7,
        4: 0x56,
        '4.': 0xd6,
        5: 0x67,
        '5.': 0xe7,
        6: 0x6f,
        '6.': 0xef,
        7: 0x32,
        '7.': 0xb2,
        8: 0x7f,
        '8.': 0xff,
        9: 0x77,
        '9.': 0xf7,
        '-': 0x4,
        ' ': 0x0
      };
      c = chars[chr];
      return [Tpl[0].replace('{{color}}', c & 0x1 ? onColor : offColor), Tpl[1].replace('{{color}}', c & 0x2 ? onColor : offColor), Tpl[2].replace('{{color}}', c & 0x4 ? onColor : offColor), Tpl[3].replace('{{color}}', c & 0x8 ? onColor : offColor), Tpl[4].replace('{{color}}', c & 0x10 ? onColor : offColor), Tpl[5].replace('{{color}}', c & 0x20 ? onColor : offColor), Tpl[6].replace('{{color}}', c & 0x40 ? onColor : offColor), Tpl[7].replace('{{color}}', c & 0x80 ? onColor : offColor)].join('');
    };
    pointer = function(arr) {
      var idx;
      idx = arr.indexOf('.');
      if (idx === -1) {
        return arr;
      } else if (idx === 0) {
        arr[0] = '0.';
      } else if (arr[idx - 1] === '-') {
        arr[idx] = '0.';
      } else {
        arr[idx - 1] = arr[idx - 1] + '.';
        arr.splice(idx, 1);
      }
      return arr;
    };
    render = function(cfg) {
      var x;
      x = -70 * cfg.scale;
      return cfg.arNumber.map(function(n) {
        x = x + 70 * cfg.scale;
        return Tpl.g.replace('{{n}}', n).replace('{{content}}', digital(n, cfg.color, cfg.inactive_color)).replace('{{transform}}', " translate(" + x + ",0) scale( " + cfg.scale + " ) ");
      }).join('');
    };
    controller = function($scope, $element) {
      var config;
      config = function(cfg) {
        if (cfg.height == null) {
          cfg.height = 100;
        }
        if (cfg.color == null) {
          cfg.color = '#52FF00';
        }
        if (cfg.inactive_color == null) {
          cfg.inactive_color = '#343434';
        }
        return $scope.ngModel.on('change', (function(_this) {
          return function() {
            var svg, width;
            cfg.number = $scope.ngModel.get('value').status;
            cfg.arNumber = pointer(('' + cfg.number).split(''));
            cfg.scale = cfg.height / 100;
            width = 70 * cfg.scale * cfg.arNumber.length;
            $scope.config = cfg;
            svg = Tpl.svg.replace('{{width}}', width).replace('{{height}}', cfg.height).replace('{{content}}', render(cfg));
            return $element.html("<div class=\"" + cfg.class1 + "\" style=\"" + cfg.style1 + "\">\n  <div class=\"" + cfg.class2 + "\" style=\"" + cfg.style2 + "\" >\n    " + cfg.descr + "\n  </div>\n  <div class=\"" + cfg.class3 + "\" style=\"" + cfg.style3 + "\">\n    " + svg + "\n  </div>\n</div>");
          };
        })(this));
      };
      return $scope.$watch('ngModel', (function(_this) {
        return function() {
          return config($scope.ngModel.data());
        };
      })(this));
    };
    return {
      restrict: 'E',
      priority: 10,
      scope: {
        ngModel: '='
      },
      controller: controller
    };
  });

}).call(this);
