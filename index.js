// Generated by CoffeeScript 1.10.0
(function() {
  'use strict';
  var chars, debug, digital;

  debug = false;


  /*
      5
    6   4
      2
    3   1
      0 7
   */

  chars = {
    0: 0x7b,
    '0.': 0xfb,
    1: 0x12,
    '1.': 0x92,
    2: 0x3d,
    '2.': 0xbd,
    3: 0x37,
    '3.': 0xb7,
    4: 0x56,
    '4.': 0xd6,
    5: 0x67,
    '5.': 0xe7,
    6: 0x6f,
    '6.': 0xef,
    7: 0x32,
    '7.': 0xb2,
    8: 0x7f,
    '8.': 0xff,
    9: 0x77,
    '9.': 0xf7,
    '-': 0x4,
    ' ': 0x0
  };

  digital = function(chr, On, Off) {
    var c;
    c = chars[chr];
    return [c & 0x1 ? On : Off, c & 0x2 ? On : Off, c & 0x4 ? On : Off, c & 0x8 ? On : Off, c & 0x10 ? On : Off, c & 0x20 ? On : Off, c & 0x40 ? On : Off, c & 0x80 ? On : Off];
  };

  angular.module('widgets', []).directive('ngNumber', function() {
    return function(scope, el, attrs) {
      var Off, On;
      On = scope.$parent.onColor;
      Off = scope.$parent.offColor;
      return el.attr('fill', digital(scope.number, On, Off)[attrs.ngNumber]);
    };
  }).directive('ngHeight', function() {
    return function(scope, el, attrs) {
      return attrs.$observe('ngHeight', function(value) {
        return attrs.$set('height', value);
      });
    };
  }).directive('ngTransform', function() {
    return function(scope, el, attrs) {
      var translate;
      translate = 70 * Number(attrs.index) * Number(attrs.scale);
      return el.attr('transform', "translate( " + translate + ", 0) scale(" + attrs.scale + ")");
    };
  }).directive('displayValue', function() {
    var Template, controller, link, pointer;
    Template = '<div class="{{class1}}" style="{{style1}}">\n  <div class="{{class2}}" style="{{style2}}">{{descr}}</div>\n  <div class="{{class3}}" style="{{style3}}">\n    <svg ng-height="{{height}}">\n      <g height="100%" ng-repeat="number in numbers track by $index " on="{{onColor}}"\n      ng-transform="{{$index}}" index="{{$index}}" scale="{{scale}}">\n        <path d="M 6.07 92.44 L 11.17 87.72 L 42.93 87.71 L 46.71 92.44 L 41.61 96.97 L 9.85 96.79 Z" ng-number="{{0}}" />\n        <path d="M 54.64 50.28 L 58.41 54.82 L 54.06 86.01 L 48.77 90.54 L 44.99 86.20 L 49.33 54.82 Z" ng-number="{{1}}" />\n        <path d="M 11.92 48.39 L 17.22 44.04 L 48.9 44.04 L 52.95 48.39 L 47.84 52.93 L 15.89 52.93 Z" ng-number="{{2}}" />\n        <path d="M 10.227 50.28 L 14.00 54.82 L 9.660 86.0 L 4.36 90.54 L .5871 86.2 L 4.93 54.82 Z" ng-number="{{3}}" />\n        <path d="M 60.79 6.427 L 64.5 10.964 L 60.22 42.15 L 54 46.6 L 51.15 42.34 L 55.50 10.964 Z" ng-number="{{4}}" />\n        <path d="M 18.35 4.53 L 23.4 0 L 55.21 0 L 58.99 4.53 L 53.89 9.2 L 22.32 9.2 Z" ng-number="{{5}}" />\n        <path d="M 16.29 6.42 L 20.07 10.964 L 15.72 42.15 L 10.436 46.6 L 6.65 42.34 L 11.00 10.964 Z" ng-number="{{6}}"" />\n        <path d="M 61.01 84.97 L 61.01 84.97 C 64.3 84.97 67.01 87.66 67.01 90.97 L 67.01 90.97 C 67.01 94.28 64.3 96.97 61.01 96.97 L 61.01 96.97 C 57.69 96.97 55.01 94.28 55.01 90.97 L 55.01 90.97 C 55.01 87.66 57.69 84.97 61.01 84.97 Z" ng-number="{{7}}" />\n      </g>\n    </svg>\n  </div>\n<div>';
    pointer = function(arr) {
      var idx;
      idx = arr.indexOf('.');
      if (idx === -1) {
        return arr;
      } else if (idx === 0) {
        arr[0] = '0.';
      } else if (arr[idx - 1] === '-') {
        arr[idx] = '0.';
      } else {
        arr[idx - 1] = arr[idx - 1] + '.';
        arr.splice(idx, 1);
      }
      return arr;
    };
    controller = function($scope) {
      var updater, widget;
      widget = $scope.ngModel;
      updater = function() {
        var sensor;
        sensor = widget.get('value');
        if (debug) {
          console.log('---- sensor', sensor);
        }
        $scope.numbers = pointer(('' + sensor.status).split(''));
        return $scope.$apply();
      };
      return widget.on('change', updater);
    };
    link = function(scope, el, attr) {
      var widget;
      widget = scope.ngModel;
      console.log('ngModel', widget);
      scope.height = widget.get('height') || 100;
      scope.scale = scope.height / 100;
      scope.value = widget.get('value');
      scope.onColor = widget.get('color');
      scope.offColor = '#fff';
      scope.descr = widget.get('descr');
      scope.class3 = widget.get('class3');
      scope.class2 = widget.get('class2');
      scope.class1 = widget.get('class1');
      scope.style1 = widget.get('style1');
      scope.style2 = widget.get('style2');
      scope.style3 = widget.get('style3');
      if (scope.value && scope.value.status) {
        return scope.numbers = pointer(('' + scope.value.status).split(''));
      } else {
        return scope.numbers = [' '];
      }
    };
    return {
      restrict: 'E',
      priority: 10,
      scope: {
        ngModel: '='
      },
      template: Template,
      controller: controller,
      link: link
    };
  });

}).call(this);
